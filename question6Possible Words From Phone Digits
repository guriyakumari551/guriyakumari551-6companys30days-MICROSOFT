// { Driver Code Starts
//Initial Template for C++

#include <bits/stdc++.h>
#include <string>

using namespace std;


 // } Driver Code Ends
//User function Template for C++

class Solution
{
    public:
void helper(int currlength,string s,vector<string>&ans,unordered_map<int,string>&mp,int n,int arr[])
     {
         if(currlength==n)
         {
             ans.push_back(s);
             return ;
         }
         string temp=mp[arr[currlength]];
         for(int i=0;i<temp.size();i++)
         {
             helper(currlength+1,s+temp[i],ans,mp,n,arr);
         }
         return ;
         
         
     }
    //Function to find list of all words possible by pressing given numbers.
    vector<string> possibleWords(int arr[], int N)
    {
        vector<string>ans;
        unordered_map<int ,string>mp;
          mp[2]="abc";
        mp[3]="def";
        mp[4]="ghi";
        mp[5]="jkl";
        mp[6]="mno";
        mp[7]="pqrs";
        mp[8]="tuv";
        mp[9]="wxyz";
        int currlength=0;
        helper(currlength,"",ans,mp,N,arr);
        return ans;
        
    }
};


// { Driver Code Starts.

int main() {
  
	int T;
	
	cin >> T; //testcases
	
	while(T--){ //while testcases exist
	   int N;
	    
	   cin >> N; //input size of array
	   
	   int a[N]; //declare the array
	   
	   for(int i =0;i<N;i++){
	       cin >> a[i]; //input the elements of array that are keys to be pressed
	   }
	   
	   Solution obj;
	   
	  vector <string> res = obj.possibleWords(a,N);
	  for (string i : res) cout << i << " ";
	   cout << endl;
	}
	
	return 0;
}  // } Driver Code Ends